<?php
  /**
   * @file
   * Contains \Drupal\contactlist\Form\RSVPForm
   */
namespace Drupal\contactlistmodule\Form;

use Drupal\Core\Database\Database;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;       
/**
 * Provides an RSVP Email form.
 */
class Contactlist extends FormBase {
public function getFormId() {
    return '5';
  }
  protected function load() {     
    $select = Database::getConnection()->select('civicrm_contact', 'c'); // první tabulka, druhé moje pojmenování
      // join the users table, so we can get the entry creators username.
    $select->join('civicrm_email', 'e', 'c.id = e.contact_id');  // join 2 tabulek a tøetí podmínka
    $select->join('civicrm_phone', 'p', 'c.id = p.contact_id');  // join 2 tabulek a tøetí podmínka
    $select->addField('c', 'display_name' );
    $select->addField('e', 'email');
    $select->addField('p', 'phone');
    $select->addField('c', 'id');
    $header = array(
      array('data' => t('Name'), 'field' => 'c.display_name'),
      array('data' => t('Email'), 'field' => 'e.email'),
      array('data' => t('Phone'), 'field' => 'p.phone',  'sort' => 'DESC'),
    );
    $select = $select->extend('Drupal\Core\Database\Query\TableSortExtender');
    $select = $select->orderByHeader($header);
    $select = $select->extend('Drupal\Core\Database\Query\PagerSelectExtender')->limit(20);
    

    
    $entries = $select->execute()->fetchAll(\PDO::FETCH_ASSOC);
    return $entries;
  }         
function findUser() {
  return $form['ajax_div'];
}
  public function buildForm(array $form, FormStateInterface $form_state) {
    $content = array();
    $content['message'] = array(
      '#markup' => $this->t('Below is a list of all Event RSVPs including username, email address and name of the event they will be attending.'),
    ); 
    
    $header = array(
            'name' => array('data' => t('Name'), 'field' => 'c.display_name'),
            'email' => array('data' => t('Email'), 'field' => 'e.email'),
            'phone' => array('data' => t('Phone'), 'field' => 'p.phone',  'sort' => 'DESC'),
        );  
    
    foreach ($entries = $this->load() as $entry) { 
      $name = array('data' => $entry['display_name'], 'class' => 'link');    
      $email = array('data' => $entry['email'], 'class' => 'link'); 
      $phone = array('data' => $entry['phone'], 'class' => 'link'); 
      $attributes = array('class' => array('content'));
      $blank_row = 'blank_' . $entry['id'];

      $rows[$entry['id']] = array(
                                  'name' => $name, 
                                  'email' => $email, 
                                  'phone' => $phone,
                                  '#attributes' => $attributes
                                 );   // pridani id do radku        
      $rows[$blank_row] = array(
                                  'name' => $name, 
                                  '#attributes' => array('class' => array('test'))
                                 );   // pridani id do radku                                 
    }   
    
    $form['table'] = array(
      '#id'    => 'select-attendees',
      '#type' => 'tableselect',
      '#header' => $header,
      '#options' => $rows,
      '#empty' => t('No entries available.'),   
    );    
    $form['table']['find'] = array(  
    '#type' => 'button',
    '#value' => t('Find'),
    '#ajax' => array(
    'callback' => '::findUser',
    'event' => 'mousedown',
    'wrapper' => 'select-attendees'
    )
    );
    // do not cache this page.
    $form['$cache']['max-age'] = 0;   
    $form['pager'] = array(
      '#type' => 'pager'
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('submit'),            
    );   
    $form['ajax_div'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id="a-div">',
    '#markup' => date('y-m-d h:i:s'),
    '#suffix' => '</div>',
  );

    return $form;
  }
  public function validateForm(array &$form, FormStateInterface $form_state) {
    
  }
  public function submitForm(array &$form, FormStateInterface $form_state) {
    drupal_set_message(t('The form is working.'));      
  }
  
  public function processTable(&$element, FormStateInterface $form_state, &$complete_form) {
  
  
  }
   
   
}